// <auto-generated>
// SpecDataGenerator에서 만들어진 파일입니다. 수정하지 마세요.
// Copyright (c) CookApps.
// 이진호(jhlee8@cookapps.com)
// </auto-generated>

using CookApps.SpecData.Generator;

namespace Pxp.Data
{

    [GeneratorSpecData]
    public partial class Option
    {
        [GeneratorId(nameof(id), typeof(string))]
        public string id;
        public float value;
    }

    [GeneratorSpecData]
    public partial class Currency
    {
        [GeneratorId(nameof(id), typeof(int))]
        public int id;
        public global::Pxp.Data.Enum_ItemType item_type;
        /// 자동 획득 시간(분)
        public int auto_acquire_time;
        /// 자동 획득시 최대 한도
        public double auto_max_count;
        /// 기본값
        public double init_count;
        /// 아이콘 키
        public string icon_key;
    }

    [GeneratorSpecData]
    public partial class Content
    {
        [GeneratorId(nameof(id), typeof(int))]
        public int id;
        /// 자동 획득 시간(분)
        public int auto_acquire_time;
        /// 자동 획득시 최대 한도
        public double auto_max_count;
        /// 기본값
        public double init_count;
    }

    [GeneratorSpecData]
    public partial class Wave
    {
        [GeneratorId(nameof(id), typeof(int))]
        public int id;
        /// 0=노말 모드, 1 = 하드 모드, 2= AI 모드
        public int mode;
        /// 웨이브
        public int wave;
        /// 등장 몬스터
        [GeneratorIdToData(nameof(monsterIndex), typeof(Monster))]
        public int monsterIndex;
        /// 등장 몬스터 수
        public int monsterCount;
        /// 보너스 몬스터 나올 확률
        public float bonusMonsterChance;
        /// 침략자 전투 선택
        public int thiefMonsterIndex;
        /// 최종 보상 타입
        public global::Pxp.Data.Enum_ItemType[] rewardType = global::System.Array.Empty<global::Pxp.Data.Enum_ItemType>();
        /// 보상 타입별 수량
        public int[] rewardAmount = global::System.Array.Empty<int>();
    }

    [GeneratorSpecData]
    public partial class Monster
    {
        /// 몬스터 index
        [GeneratorId(nameof(monsterIndex), typeof(int))]
        public int monsterIndex;
        public global::Pxp.Data.Enum_monsterType monsterType;
        public int hp;
        public float moveSpeed;
        /// 몹 처치 제한 시간(초)
        public float limitTime;
        /// 획득 코인 수량
        public int coinAmount;
        /// 획득 칩 수량
        public int chipAmount;
        /// 획득 effect=relic의 value_default와 동일
        public int effectId;
        /// UI 하단에 쌓이는 코인 !
        public int bonusGaguePoint;
        /// 프리팹
        public string prefab_key;
    }

    [GeneratorSpecData]
    public partial class Hero
    {
        [GeneratorId(nameof(id), typeof(int))]
        public int id;
        public global::Pxp.Data.Enum_ItemType item_type;
        /// 초기 영웅 설정
        public bool hero_unlock;
        public string hero_name;
        /// 프리팹
        public string prefab_key;
        /// 희귀도
        public global::Pxp.Data.Enum_TierType tier;
        /// 일러스트
        public string icon_key;
        public int attack;
        public float attackSpeed;
        /// 공격 범위 반지름
        public float attackRange;
        /// 인게임 성급에 따라 오르는 값
        public int attack_starUp;
        /// 인게임 강화할때 오르는 값
        public int attack_levelUp;
        /// 영웅의 기본 기능과 관련된 스킬 아이디 호출
        public int skill_default;
        /// (아웃게임) 골드로 영웅 강화할때 증가하는 공격력
        public int goldLevelup;
        /// (아웃게임) 골드로 영웅 강화할때 비용
        public int goldLevelup_DefaultCost;
        /// (아웃게임) 골드로 영웅 강화할때 비용
        public int goldLevelup_IncreaseCost;
        /// 성급up에 필요한 영웅 개수. 가장 첫번째는 해금에 필요한 개수
        public int[] starValue = global::System.Array.Empty<int>();
        /// 성급에 따라 획득하는 effect
        [GeneratorIdToData(nameof(skill_star_1), typeof(Hero_Skill))]
        public int skill_star_1;
        [GeneratorIdToData(nameof(skill_star_2), typeof(Hero_Skill))]
        public int skill_star_2;
        [GeneratorIdToData(nameof(skill_star_3), typeof(Hero_Skill))]
        public int skill_star_3;
        [GeneratorIdToData(nameof(skill_star_4), typeof(Hero_Skill))]
        public int skill_star_4;
        [GeneratorIdToData(nameof(skill_star_5), typeof(Hero_Skill))]
        public int skill_star_5;
    }

    [GeneratorSpecData]
    public partial class Hero_Skill
    {
        [GeneratorId(nameof(id), typeof(int))]
        public int id;
        /// 영웅의 기본 공격 패턴 및 성급에 따라 해금되는 스킬의 디스크립션. (구현은 대역대 90XX ,  9101  , 9301   만 합니다) / 수치 값은 동적으로 안받아오고 깡 text로 쓸게요
        public string heroSkillDescription;
        /// << 기믹 관련 값들 >> 주사위 마다 다르게 적용됨
        public float skillValue_1;
        public float skillValue_2;
        public float skillValue_3;
        public float skillValue_4;
        public float skillValue_5;
    }

    [GeneratorSpecData]
    public partial class Shop
    {
        [GeneratorId(nameof(id), typeof(string))]
        public string id;
        public string product_id;
        /// #사용하지 않을 경우 -1
        public int index;
        /// 분류 기준
        public global::Pxp.Data.Enum_ShopCategory shopCategory;
        public global::Pxp.Data.Enum_PurchaseType purchaseType;
        /// iap=원화 기준
        public int price;
        /// (구매 제한) : 어차피 다음날 버그 발견해도 상관없긴함
        public int limit;
        public global::Pxp.Data.Enum_ItemType item_1;
        public int itemAmount_1;
        public global::Pxp.Data.Enum_ItemType item_2;
        public int itemAmount_2;
        public global::Pxp.Data.Enum_ItemType item_3;
        public int itemAmount_3;
        public global::Pxp.Data.Enum_ItemType item_4;
        public int itemAmount_4;
        public global::Pxp.Data.Enum_ItemType item_5;
        public int itemAmount_5;
    }
}
